{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to e-Coke\n\n\nLive version at: \n#link\n\n\nRunning locally\n\n\n\n\nYou should have Python(3.5 or greater) and pip installed in your system.\n\n\nClone the project into your local machine \ngit clone https://github.com/ErickMwazonga/e-Coke.git\n\n\ncd e-Coke\n\n\npip install -r requirements.txt\n\n\nRun \npython manage.py migrate\n to create the database. Kindly note that PostgreSQL database is   used. Use or override the database settings declared in \necoke/settings/base.py\n accordingly.\n\n\nRun \npython manage.py runserver\n to start the server.\n\n\nVisit \nlocalhost:8000\n in your browser.\n\n\n\n\nRunning tests locally\n\n\nAll tests are located in \n/tests\n\nTo run: \npython manage.py test tests\n\n\nAll the best",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-e-coke",
            "text": "Live version at:  #link",
            "title": "Welcome to e-Coke"
        },
        {
            "location": "/#running-locally",
            "text": "You should have Python(3.5 or greater) and pip installed in your system.  Clone the project into your local machine  git clone https://github.com/ErickMwazonga/e-Coke.git  cd e-Coke  pip install -r requirements.txt  Run  python manage.py migrate  to create the database. Kindly note that PostgreSQL database is   used. Use or override the database settings declared in  ecoke/settings/base.py  accordingly.  Run  python manage.py runserver  to start the server.  Visit  localhost:8000  in your browser.",
            "title": "Running locally"
        },
        {
            "location": "/#running-tests-locally",
            "text": "All tests are located in  /tests \nTo run:  python manage.py test tests  All the best",
            "title": "Running tests locally"
        },
        {
            "location": "/api/",
            "text": "e-Coke API Version 1.0\n\n\nThis is a documentation of all the REST endpoints exposed by e-Coke API.\nToken based authentication, using JSON web tokens is required for accessing in\nof the endpoints documented herein.\n\n\nResources\n\n\n\n\nBrands\n\n\n\n\nBrands\n\n\nSoft drink brand information collected in a given location\n\n\nEndpoints\n\n\n\n\nPOST \napi/brands/create\n- Create a single brand in the database.\n\n\nGET \napi/brands\n - List all brands in the database.\n\n\nGET \napi/brands/{id}\n - Get a single brand by its id.\n\n\nPUT \napi/brands/{id}/update\n - Retrieve and update a single brand.\n\n\nDELETE \napi/brands/{id}/delete\n - Delete a single brand from the database.",
            "title": "API"
        },
        {
            "location": "/api/#e-coke-api-version-10",
            "text": "This is a documentation of all the REST endpoints exposed by e-Coke API.\nToken based authentication, using JSON web tokens is required for accessing in\nof the endpoints documented herein.",
            "title": "e-Coke API Version 1.0"
        },
        {
            "location": "/api/#resources",
            "text": "Brands",
            "title": "Resources"
        },
        {
            "location": "/api/#brands",
            "text": "Soft drink brand information collected in a given location",
            "title": "Brands"
        },
        {
            "location": "/api/#endpoints",
            "text": "POST  api/brands/create - Create a single brand in the database.  GET  api/brands  - List all brands in the database.  GET  api/brands/{id}  - Get a single brand by its id.  PUT  api/brands/{id}/update  - Retrieve and update a single brand.  DELETE  api/brands/{id}/delete  - Delete a single brand from the database.",
            "title": "Endpoints"
        }
    ]
}